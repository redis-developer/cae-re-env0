# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated


from env0_client.api_client import ApiClient, RequestSerialized
from env0_client.api_response import ApiResponse
from env0_client.rest import RESTResponseType


class GettingStartedApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def authentication(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Authentication

        Authentication against the env0 API is done via API Keys.  An API Key is created by an organization administrator, but is not connected to any specific user when it's being used.  ### Creating an API Key With a Specific Role - Once you've created your own organization, you can create and manage API Keys. - Navigate to the Organization Settings page and click the API Keys tab. - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Creating a Personal API Key - Click on your avatar (located on the top right of the screen) - Click on Personal Settings - Select the API Keys tab - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Using an API Key to Authenticate Authentication to the env0 API is done using the Basic Authentication method. Each request made should include the API Key ID as the username, and the API Key Secret as the password. For example - when Using curl, we can include these parameters using the flag --user {API Key ID}:{API Key Secret}.  ### API Key Permissions API Keys are given the role of an Organization Admin, meaning they can be used to perform any action, in any project, under the scope of the organization.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._authentication_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def authentication_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Authentication

        Authentication against the env0 API is done via API Keys.  An API Key is created by an organization administrator, but is not connected to any specific user when it's being used.  ### Creating an API Key With a Specific Role - Once you've created your own organization, you can create and manage API Keys. - Navigate to the Organization Settings page and click the API Keys tab. - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Creating a Personal API Key - Click on your avatar (located on the top right of the screen) - Click on Personal Settings - Select the API Keys tab - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Using an API Key to Authenticate Authentication to the env0 API is done using the Basic Authentication method. Each request made should include the API Key ID as the username, and the API Key Secret as the password. For example - when Using curl, we can include these parameters using the flag --user {API Key ID}:{API Key Secret}.  ### API Key Permissions API Keys are given the role of an Organization Admin, meaning they can be used to perform any action, in any project, under the scope of the organization.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._authentication_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def authentication_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Authentication

        Authentication against the env0 API is done via API Keys.  An API Key is created by an organization administrator, but is not connected to any specific user when it's being used.  ### Creating an API Key With a Specific Role - Once you've created your own organization, you can create and manage API Keys. - Navigate to the Organization Settings page and click the API Keys tab. - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Creating a Personal API Key - Click on your avatar (located on the top right of the screen) - Click on Personal Settings - Select the API Keys tab - Click Add API Key, and enter a name for your key in the Name field. This name is for your reference and isn't used directly in authentication.    > ❗️Save Your API Key ID & Secret   > The secret will not be available after you close this modal  ### Using an API Key to Authenticate Authentication to the env0 API is done using the Basic Authentication method. Each request made should include the API Key ID as the username, and the API Key Secret as the password. For example - when Using curl, we can include these parameters using the flag --user {API Key ID}:{API Key Secret}.  ### API Key Permissions API Keys are given the role of an Organization Admin, meaning they can be used to perform any action, in any project, under the scope of the organization.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._authentication_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _authentication_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'env0_API_Key'
        ]

        return self.api_client.param_serialize(
            method='HEAD',
            resource_path='/',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


