# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class RBACPermission(str, Enum):
    """
    RBACPermission
    """

    """
    allowed enum values
    """
    MANAGE_PROJECT_TEMPLATES = 'MANAGE_PROJECT_TEMPLATES'
    ABORT_DEPLOYMENT = 'ABORT_DEPLOYMENT'
    READ_STATE = 'READ_STATE'
    CREATE_CROSS_PROJECT_ENVIRONMENTS = 'CREATE_CROSS_PROJECT_ENVIRONMENTS'
    EDIT_ORGANIZATION_SETTINGS = 'EDIT_ORGANIZATION_SETTINGS'
    EDIT_ENVIRONMENT_SETTINGS = 'EDIT_ENVIRONMENT_SETTINGS'
    RUN_TASK = 'RUN_TASK'
    CREATE_VCS_ENVIRONMENT = 'CREATE_VCS_ENVIRONMENT'
    EDIT_PROJECT_SETTINGS = 'EDIT_PROJECT_SETTINGS'
    VIEW_PROVIDERS = 'VIEW_PROVIDERS'
    RUN_PLAN = 'RUN_PLAN'
    CREATE_CUSTOM_ROLES = 'CREATE_CUSTOM_ROLES'
    ARCHIVE_ENVIRONMENT = 'ARCHIVE_ENVIRONMENT'
    ASSIGN_ROLE_ON_ENVIRONMENT = 'ASSIGN_ROLE_ON_ENVIRONMENT'
    VIEW_ORGANIZATION = 'VIEW_ORGANIZATION'
    VIEW_PROJECT = 'VIEW_PROJECT'
    RUN_APPLY = 'RUN_APPLY'
    EDIT_ALLOW_REMOTE_APPLY = 'EDIT_ALLOW_REMOTE_APPLY'
    VIEW_ENVIRONMENT = 'VIEW_ENVIRONMENT'
    VIEW_AUDIT_LOGS = 'VIEW_AUDIT_LOGS'
    OVERRIDE_MAX_ENVIRONMENT_PROJECT_LIMITS = 'OVERRIDE_MAX_ENVIRONMENT_PROJECT_LIMITS'
    CREATE_AND_EDIT_MODULES = 'CREATE_AND_EDIT_MODULES'
    MANAGE_ENVIRONMENT_LOCK = 'MANAGE_ENVIRONMENT_LOCK'
    WRITE_STATE = 'WRITE_STATE'
    CREATE_AND_EDIT_TEMPLATES = 'CREATE_AND_EDIT_TEMPLATES'
    FORCE_UNLOCK_WORKSPACE = 'FORCE_UNLOCK_WORKSPACE'
    VIEW_DASHBOARD = 'VIEW_DASHBOARD'
    CREATE_AND_EDIT_PROVIDERS = 'CREATE_AND_EDIT_PROVIDERS'
    OVERRIDE_MAX_TTL = 'OVERRIDE_MAX_TTL'
    VIEW_MODULES = 'VIEW_MODULES'
    CREATE_PROJECT = 'CREATE_PROJECT'
    MANAGE_BILLING = 'MANAGE_BILLING'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of RBACPermission from a JSON string"""
        return cls(json.loads(json_str))


