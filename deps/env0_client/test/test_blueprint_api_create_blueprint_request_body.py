# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.blueprint_api_create_blueprint_request_body import BlueprintApiCreateBlueprintRequestBody

class TestBlueprintApiCreateBlueprintRequestBody(unittest.TestCase):
    """BlueprintApiCreateBlueprintRequestBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BlueprintApiCreateBlueprintRequestBody:
        """Test BlueprintApiCreateBlueprintRequestBody
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlueprintApiCreateBlueprintRequestBody`
        """
        model = BlueprintApiCreateBlueprintRequestBody()
        if include_optional:
            return BlueprintApiCreateBlueprintRequestBody(
                organization_id = '',
                name = '',
                description = '',
                retry = env0_client.models.blueprint_api/retry.BlueprintApi.Retry(
                    on_destroy = null, 
                    on_deploy = null, ),
                run_tests_on_pull_request = True,
                is_terragrunt_run_all = True,
                project_ids = [
                    ''
                    ],
                tag_prefix = '',
                repository = '',
                revision = '',
                path = '',
                file_name = '',
                helm_chart_name = '',
                terraform_version = None,
                opentofu_version = '',
                terragrunt_version = '',
                terragrunt_tf_binary = 'terraform',
                pulumi_version = '',
                type = 'cloudformation',
                gitlab_project_id = 1.337,
                token_name = '',
                token_id = '',
                ssh_keys = [
                    env0_client.models.blueprint_api/ssh_key.BlueprintApi.SshKey(
                        id = '0', 
                        name = '', )
                    ],
                github_installation_id = 1.337,
                bitbucket_client_key = '',
                is_bitbucket_server = True,
                is_git_lab_enterprise = True,
                is_git_hub_enterprise = True,
                is_git_lab = True,
                is_azure_dev_ops = True,
                is_helm_repository = True
            )
        else:
            return BlueprintApiCreateBlueprintRequestBody(
                organization_id = '',
                name = '',
                repository = '',
                type = 'cloudformation',
        )
        """

    def testBlueprintApiCreateBlueprintRequestBody(self):
        """Test BlueprintApiCreateBlueprintRequestBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
