# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.dashboard_api_query_base_response_structure_api_dts77228058_api_dts77078059_api_dts76778060_api_dts75238066_api_dts74768066_api_dts29610061_api_dts27110061_api_dts26910063_api_dts18610063_api_dts010064_inner import DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner

class TestDashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner(unittest.TestCase):
    """DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner:
        """Test DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner`
        """
        model = DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner()
        if include_optional:
            return DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner(
                name = '',
                id = '',
                project_name = '',
                project_id = '',
                status = 'ABORTING',
                user = env0_client.models.user.User(
                    email = '', 
                    user_id = '', 
                    created_at = '', 
                    app_metadata = env0_client.models.app_metadata.app_metadata(), 
                    picture = '', 
                    name = '', 
                    last_login = '', 
                    given_name = '', 
                    family_name = '', ),
                last_deployment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                blueprint_id = '',
                blueprint_name = '',
                is_single_use_blueprint = True
            )
        else:
            return DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner(
                name = '',
                id = '',
                project_name = '',
                project_id = '',
                status = 'ABORTING',
                user = env0_client.models.user.User(
                    email = '', 
                    user_id = '', 
                    created_at = '', 
                    app_metadata = env0_client.models.app_metadata.app_metadata(), 
                    picture = '', 
                    name = '', 
                    last_login = '', 
                    given_name = '', 
                    family_name = '', ),
                last_deployment_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                blueprint_id = '',
                blueprint_name = '',
        )
        """

    def testDashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner(self):
        """Test DashboardApiQueryBaseResponseStructureApiDTs77228058ApiDTs77078059ApiDTs76778060ApiDTs75238066ApiDTs74768066ApiDTs29610061ApiDTs27110061ApiDTs26910063ApiDTs18610063ApiDTs010064Inner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
