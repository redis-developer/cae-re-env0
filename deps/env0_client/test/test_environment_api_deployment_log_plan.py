# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.environment_api_deployment_log_plan import EnvironmentApiDeploymentLogPlan

class TestEnvironmentApiDeploymentLogPlan(unittest.TestCase):
    """EnvironmentApiDeploymentLogPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnvironmentApiDeploymentLogPlan:
        """Test EnvironmentApiDeploymentLogPlan
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnvironmentApiDeploymentLogPlan`
        """
        model = EnvironmentApiDeploymentLogPlan()
        if include_optional:
            return EnvironmentApiDeploymentLogPlan(
                resource_changes = [
                    env0_client.models.deployment_api/plan/plan_resource_change.DeploymentApi.Plan.PlanResourceChange(
                        name = '', 
                        provider_name = '', 
                        type = '', 
                        path = '', 
                        action = 'create', 
                        attributes = [
                            env0_client.models.deployment_api/plan/attribute_change.DeploymentApi.Plan.AttributeChange(
                                name = '', 
                                before = null, 
                                after = null, )
                            ], 
                        importing = env0_client.models.deployment_api/plan/resource_import_data.DeploymentApi.Plan.ResourceImportData(
                            id = '', ), 
                        previous_address = '', )
                    ],
                output_changes = [
                    env0_client.models.deployment_api/plan/plan_output_change.DeploymentApi.Plan.PlanOutputChange(
                        name = '', 
                        action = 'create', 
                        attributes = [
                            env0_client.models.deployment_api/plan/attribute_change.DeploymentApi.Plan.AttributeChange(
                                name = '', 
                                before = null, 
                                after = null, )
                            ], )
                    ]
            )
        else:
            return EnvironmentApiDeploymentLogPlan(
                resource_changes = [
                    env0_client.models.deployment_api/plan/plan_resource_change.DeploymentApi.Plan.PlanResourceChange(
                        name = '', 
                        provider_name = '', 
                        type = '', 
                        path = '', 
                        action = 'create', 
                        attributes = [
                            env0_client.models.deployment_api/plan/attribute_change.DeploymentApi.Plan.AttributeChange(
                                name = '', 
                                before = null, 
                                after = null, )
                            ], 
                        importing = env0_client.models.deployment_api/plan/resource_import_data.DeploymentApi.Plan.ResourceImportData(
                            id = '', ), 
                        previous_address = '', )
                    ],
                output_changes = [
                    env0_client.models.deployment_api/plan/plan_output_change.DeploymentApi.Plan.PlanOutputChange(
                        name = '', 
                        action = 'create', 
                        attributes = [
                            env0_client.models.deployment_api/plan/attribute_change.DeploymentApi.Plan.AttributeChange(
                                name = '', 
                                before = null, 
                                after = null, )
                            ], )
                    ],
        )
        """

    def testEnvironmentApiDeploymentLogPlan(self):
        """Test EnvironmentApiDeploymentLogPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
