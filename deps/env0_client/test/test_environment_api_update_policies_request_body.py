# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.environment_api_update_policies_request_body import EnvironmentApiUpdatePoliciesRequestBody

class TestEnvironmentApiUpdatePoliciesRequestBody(unittest.TestCase):
    """EnvironmentApiUpdatePoliciesRequestBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnvironmentApiUpdatePoliciesRequestBody:
        """Test EnvironmentApiUpdatePoliciesRequestBody
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnvironmentApiUpdatePoliciesRequestBody`
        """
        model = EnvironmentApiUpdatePoliciesRequestBody()
        if include_optional:
            return EnvironmentApiUpdatePoliciesRequestBody(
                project_id = '',
                number_of_environments = 1.337,
                number_of_environments_total = 1.337,
                max_ttl = 'inherit',
                default_ttl = 'inherit',
                requires_approval_default = True,
                include_cost_estimation = True,
                skip_apply_when_plan_is_empty = True,
                disable_destroy_environments = True,
                skip_redundant_deployments = True,
                run_pull_request_plan_default = True,
                continuous_deployment_default = True,
                force_remote_backend = True,
                drift_detection_enabled = True,
                drift_detection_cron = '',
                outputs_as_inputs_enabled = True
            )
        else:
            return EnvironmentApiUpdatePoliciesRequestBody(
                project_id = '',
        )
        """

    def testEnvironmentApiUpdatePoliciesRequestBody(self):
        """Test EnvironmentApiUpdatePoliciesRequestBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
