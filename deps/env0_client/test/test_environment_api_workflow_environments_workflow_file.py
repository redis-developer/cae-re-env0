# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.environment_api_workflow_environments_workflow_file import EnvironmentApiWorkflowEnvironmentsWorkflowFile

class TestEnvironmentApiWorkflowEnvironmentsWorkflowFile(unittest.TestCase):
    """EnvironmentApiWorkflowEnvironmentsWorkflowFile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnvironmentApiWorkflowEnvironmentsWorkflowFile:
        """Test EnvironmentApiWorkflowEnvironmentsWorkflowFile
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnvironmentApiWorkflowEnvironmentsWorkflowFile`
        """
        model = EnvironmentApiWorkflowEnvironmentsWorkflowFile()
        if include_optional:
            return EnvironmentApiWorkflowEnvironmentsWorkflowFile(
                settings = env0_client.models.workflow_file_settings.WorkflowFile_settings(
                    environment_removal_strategy = destroy, ),
                environments = {
                    'key' : env0_client.models.environment_api/workflow_environments/workflow_sub_environment.EnvironmentApi.WorkflowEnvironments.WorkflowSubEnvironment(
                        environment_id = '', 
                        to_destroy = True, 
                        is_remote_backend = True, 
                        k8s_namespace = '', 
                        name = '', 
                        template_name = '', 
                        template_id = '', 
                        template_type = 'cloudformation', 
                        revision = '', 
                        workspace = '', 
                        needs = [
                            ''
                            ], 
                        terragrunt_working_directory = '', 
                        disabled = null, )
                    }
            )
        else:
            return EnvironmentApiWorkflowEnvironmentsWorkflowFile(
                environments = {
                    'key' : env0_client.models.environment_api/workflow_environments/workflow_sub_environment.EnvironmentApi.WorkflowEnvironments.WorkflowSubEnvironment(
                        environment_id = '', 
                        to_destroy = True, 
                        is_remote_backend = True, 
                        k8s_namespace = '', 
                        name = '', 
                        template_name = '', 
                        template_id = '', 
                        template_type = 'cloudformation', 
                        revision = '', 
                        workspace = '', 
                        needs = [
                            ''
                            ], 
                        terragrunt_working_directory = '', 
                        disabled = null, )
                    },
        )
        """

    def testEnvironmentApiWorkflowEnvironmentsWorkflowFile(self):
        """Test EnvironmentApiWorkflowEnvironmentsWorkflowFile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
