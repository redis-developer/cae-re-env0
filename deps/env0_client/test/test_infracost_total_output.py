# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.models.infracost_total_output import InfracostTotalOutput

class TestInfracostTotalOutput(unittest.TestCase):
    """InfracostTotalOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InfracostTotalOutput:
        """Test InfracostTotalOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InfracostTotalOutput`
        """
        model = InfracostTotalOutput()
        if include_optional:
            return InfracostTotalOutput(
                version = '',
                projects = [
                    env0_client.models.infracost_total_output_projects_inner.Infracost_TotalOutput_projects_inner(
                        path = '', 
                        metadata = null, 
                        past_breakdown = env0_client.models.infracost/output.Infracost.Output(
                            resources = [
                                null
                                ], 
                            total_hourly_cost = '', 
                            total_monthly_cost = '', ), 
                        breakdown = env0_client.models.infracost/output.Infracost.Output(
                            total_hourly_cost = '', 
                            total_monthly_cost = '', ), 
                        diff = , )
                    ],
                time_generated = '',
                summary = env0_client.models.infracost_total_output_summary.Infracost_TotalOutput_summary(
                    unsupported_resource_counts = null, ),
                resources = [
                    null
                    ],
                total_hourly_cost = '',
                total_monthly_cost = ''
            )
        else:
            return InfracostTotalOutput(
        )
        """

    def testInfracostTotalOutput(self):
        """Test InfracostTotalOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
