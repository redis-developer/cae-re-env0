# coding: utf-8

"""
    env0 API

    This document describes the resources that make up the official env0 REST API  ### BaseURL https://api.env0.com/  ### Content Types All requests should be in JSON format, and include the `accept: application/json` header 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from env0_client.api.provider_registry_api import ProviderRegistryApi


class TestProviderRegistryApi(unittest.TestCase):
    """ProviderRegistryApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProviderRegistryApi()

    def tearDown(self) -> None:
        pass

    def test_provider_registry_create_gpg_key(self) -> None:
        """Test case for provider_registry_create_gpg_key

        Create a new GPG key
        """
        pass

    def test_provider_registry_create_provider(self) -> None:
        """Test case for provider_registry_create_provider

        Create a new provider
        """
        pass

    def test_provider_registry_create_version(self) -> None:
        """Test case for provider_registry_create_version

        Create a new provider version
        """
        pass

    def test_provider_registry_delete_gpg_key(self) -> None:
        """Test case for provider_registry_delete_gpg_key

        Delete a GPG key
        """
        pass

    def test_provider_registry_delete_provider(self) -> None:
        """Test case for provider_registry_delete_provider

        Delete a provider
        """
        pass

    def test_provider_registry_download_version(self) -> None:
        """Test case for provider_registry_download_version

        Get a download url for a specific version
        """
        pass

    def test_provider_registry_find_gpg_keys_by_organization(self) -> None:
        """Test case for provider_registry_find_gpg_keys_by_organization

        List all available GPG keys
        """
        pass

    def test_provider_registry_find_provider_by_id(self) -> None:
        """Test case for provider_registry_find_provider_by_id

        Find a provider by id
        """
        pass

    def test_provider_registry_find_provider_by_type(self) -> None:
        """Test case for provider_registry_find_provider_by_type

        Find a provider by type
        """
        pass

    def test_provider_registry_find_providers_by_organization_id(self) -> None:
        """Test case for provider_registry_find_providers_by_organization_id

        Find all providers in an organization
        """
        pass

    def test_provider_registry_update_provider(self) -> None:
        """Test case for provider_registry_update_provider

        Update a provider
        """
        pass


if __name__ == '__main__':
    unittest.main()
